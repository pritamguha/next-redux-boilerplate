{"ast":null,"code":"import _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nvar _jsxFileName = \"/Users/pritamguha/Documents/Pritam/next-redux-boilerplate/pages/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { withRedux } from '../lib/redux';\nimport useInterval from '../lib/useInterval';\nimport Clock from '../components/clock';\nimport Counter from '../components/counter';\n\nconst IndexPage = () => {\n  // Tick the time every second\n  const dispatch = useDispatch();\n  useInterval(() => {\n    dispatch({\n      type: 'TICK',\n      light: true,\n      lastUpdate: _Date$now()\n    });\n  }, 1000);\n  return __jsx(React.Fragment, null, __jsx(Clock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), __jsx(Counter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }));\n};\n\nIndexPage.getInitialProps = ({\n  reduxStore\n}) => {\n  // Tick the time once, so we'll have a\n  // valid time before first render\n  const {\n    dispatch\n  } = reduxStore;\n  dispatch({\n    type: 'TICK',\n    light: false,\n    lastUpdate: _Date$now()\n  });\n  return {};\n};\n\nexport default withRedux(IndexPage);","map":{"version":3,"sources":["/Users/pritamguha/Documents/Pritam/next-redux-boilerplate/pages/index.js"],"names":["React","useDispatch","withRedux","useInterval","Clock","Counter","IndexPage","dispatch","type","light","lastUpdate","getInitialProps","reduxStore"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB;AACA,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACAE,EAAAA,WAAW,CAAC,MAAM;AAChBI,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAE,MADC;AAEPC,MAAAA,KAAK,EAAE,IAFA;AAGPC,MAAAA,UAAU,EAAE;AAHL,KAAD,CAAR;AAKD,GANU,EAMR,IANQ,CAAX;AAOA,SACE,4BACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CAhBD;;AAkBAJ,SAAS,CAACK,eAAV,GAA4B,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AAC9C;AACA;AACA,QAAM;AAAEL,IAAAA;AAAF,MAAeK,UAArB;AACAL,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAE,MADC;AAEPC,IAAAA,KAAK,OAFE;AAGPC,IAAAA,UAAU,EAAE;AAHL,GAAD,CAAR;AAMA,SAAO,EAAP;AACD,CAXD;;AAaA,eAAeR,SAAS,CAACI,SAAD,CAAxB","sourcesContent":["import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { withRedux } from '../lib/redux'\nimport useInterval from '../lib/useInterval'\nimport Clock from '../components/clock'\nimport Counter from '../components/counter'\n\nconst IndexPage = () => {\n  // Tick the time every second\n  const dispatch = useDispatch()\n  useInterval(() => {\n    dispatch({\n      type: 'TICK',\n      light: true,\n      lastUpdate: Date.now(),\n    })\n  }, 1000)\n  return (\n    <>\n      <Clock />\n      <Counter />\n    </>\n  )\n}\n\nIndexPage.getInitialProps = ({ reduxStore }) => {\n  // Tick the time once, so we'll have a\n  // valid time before first render\n  const { dispatch } = reduxStore\n  dispatch({\n    type: 'TICK',\n    light: typeof window === 'object',\n    lastUpdate: Date.now(),\n  })\n\n  return {}\n}\n\nexport default withRedux(IndexPage)\n"]},"metadata":{},"sourceType":"module"}